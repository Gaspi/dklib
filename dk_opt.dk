#NAME dk_opt

(; options ;)
option : cc.uT -> cc.uT.
None : A : cc.uT -> cc.eT (option A).
Some : A : cc.uT -> cc.eT A -> cc.eT (option A).
match_option : A : cc.uT ->
               P : (cc.eT (option A) -> cc.uT) ->
               cc.eT (P (None A)) ->
               (a : cc.eT A -> cc.eT (P (Some A a))) ->
               o : cc.eT (option A) ->
               cc.eT (P o).
simple_match_option : A : cc.uT ->
                      return : cc.uT ->
                      cc.eT return ->
                      (a : cc.eT A -> cc.eT return) ->
                      o : cc.eT (option A) ->
                      cc.eT return
                    :=
                      A : cc.uT =>
                      return : cc.uT =>
                      match_option A (_x : cc.eT (option A) => return).

[A : cc.uT,
 P : cc.eT (option A) -> cc.uT,
 Hnone : cc.eT (P (None A)),
 Hsome : a : cc.eT A -> cc.eT (P (Some A a))]
    match_option A P Hnone Hsome (None _) --> Hnone

[A : cc.uT,
 P : cc.eT (option A) -> cc.uT,
 Hnone : cc.eT (P (None A)),
 Hsome : a : cc.eT A -> cc.eT (P (Some A a)),
 a : cc.eT A]
    match_option A P Hnone Hsome (Some _ a) --> Hsome a.
